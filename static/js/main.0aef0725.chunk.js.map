{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/Filters/Filters.js","App.js","index.js"],"names":["Todo","state","title","props","tempTitle","checkBoxClicked","event","target","closest","classList","toggle","onCheckBox","id","onDestroyClick","onDestroy","onEdit","tagName","currentTarget","add","querySelector","focus","onEditInput","setState","value","onBlurInput","trim","remove","prevState","onEscape","keyCode","onKeyInput","key","this","completed","onDoubleClick","className","type","checked","onClick","onChange","onBlur","onKeyPress","onFocus","onFocusInput","onKeyDown","Component","TodoList","todos","map","todo","NewTodo","changeHandler","onNewTodo","placeholder","React","Filters","linkList","currentItem","clickHandler","preventDefault","onFilters","link","href","App","filtersFlag","count","localStorage","JSON","parse","getItem","length","visibleTodos","filter","flag","item","filtersHandler","flagFilters","checkBoxHandler","curentTodo","find","setItem","stringify","onClearButton","destroyHandler","editHandler","newTodoHandler","newId","push","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0aef0725.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Todo extends Component {\n  state = {\n    title: this.props.title,\n    tempTitle: this.props.title,\n  }\n\n   checkBoxClicked = (event) => {\n     event.target.closest('li').classList.toggle('completed');\n     this.props.onCheckBox(this.props.id);\n   }\n\n  onDestroyClick = () => {\n    this.props.onDestroy(this.props.id);\n  }\n\n  onEdit = (event) => {\n    if (event.target.tagName === 'LABEL') {\n      event.currentTarget.classList.add('editing');\n      event.currentTarget.querySelector('.edit').focus();\n    }\n  }\n\n  onEditInput = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = (event) => {\n    if (this.state.tempTitle.trim() !== '') {\n      this.props.onEdit(this.props.id, this.state.tempTitle.trim());\n      event.target.closest('li').classList.remove('editing');\n    } else {\n      this.setState(prevState => ({\n        tempTitle: prevState.title,\n      }));\n      event.target.closest('li').classList.remove('editing');\n    }\n  }\n\n  onEscape = (event) => {\n    if (event.keyCode === 27) {\n      this.setState(prevState => ({\n        tempTitle: prevState.title,\n      }));\n      event.target.closest('li').classList.remove('editing');\n    }\n  }\n\n  onKeyInput = (event) => {\n    if (event.key === 'Enter') {\n      if (this.state.tempTitle.trim() !== '') {\n        this.props.onEdit(this.props.id, this.state.tempTitle.trim());\n        event.target.closest('li').classList.remove('editing');\n      } else {\n        this.setState(prevState => ({\n          tempTitle: prevState.title,\n        }));\n        event.target.closest('li').classList.remove('editing');\n      }\n    }\n  }\n\n  render() {\n    const { title, completed } = this.props;\n\n    return (\n      <li\n        onDoubleClick={this.onEdit}\n        className={completed ? 'completed' : ''}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onClick={this.checkBoxClicked}\n          />\n          <label>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={this.onDestroyClick}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={this.state.tempTitle}\n          onChange={this.onEditInput}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onFocus={this.onFocusInput}\n          onKeyDown={this.onEscape}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, onCheckBox, onDestroy, onEdit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          onEdit={onEdit}\n          onDestroy={onDestroy}\n          onCheckBox={onCheckBox}\n          key={todo.id}\n          {...todo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape(),\n  ).isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewTodo extends React.Component {\n  state = {\n    tempTitle: '',\n  }\n\n  changeHandler = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = (event) => {\n    const { target } = event;\n    const title = this.state.tempTitle.trim();\n\n    if (title !== '') {\n      this.setState({\n        tempTitle: '',\n      });\n      target.value = '';\n      this.props.onNewTodo(title);\n    } else {\n      this.setState({\n        tempTitle: '',\n      });\n    }\n  }\n\n  onEscape = (event) => {\n    const { keyCode, target } = event;\n\n    if (keyCode === 27) {\n      this.setState({\n        tempTitle: '',\n      });\n      target.value = '';\n    }\n  }\n\n  onKeyInput = (event) => {\n    const { key, target } = event;\n\n    if (key === 'Enter') {\n      const title = this.state.tempTitle.trim();\n\n      if (title !== '') {\n        this.setState({\n          tempTitle: '',\n        });\n        target.value = '';\n        this.props.onNewTodo(title);\n      } else {\n        this.setState({\n          tempTitle: '',\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.changeHandler}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onKeyDown={this.onEscape}\n        />\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  onNewTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Filters extends Component {\n  linkList = [\n    {\n      id: 1, title: 'All',\n    },\n    {\n      id: 2, title: 'Active',\n    },\n    {\n      id: 3, title: 'Complited',\n    },\n  ]\n\n  state = {\n    currentItem: 1,\n  }\n\n  clickHandler = (event, id) => {\n    event.preventDefault();\n    this.setState({ currentItem: id });\n    this.props.onFilters(id);\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.linkList.map(link => (\n          <li key={link.id}>\n            <a\n              href={`#/${link.title}`}\n              className={this.state.currentItem === link.id ? 'selected' : ''}\n              onClick={event => this.clickHandler(event, link.id)}\n            >\n              {link.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nFilters.propTypes = {\n  onFilters: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { Filters } from './components/Filters/Filters';\n\nclass App extends Component {\n  state = {\n    filtersFlag: 1,\n    count: localStorage.todos\n      ? (JSON.parse(localStorage.getItem('todos'))).length\n      : 0,\n    visibleTodos: localStorage.todos\n      ? JSON.parse(localStorage.getItem('todos'))\n      : [],\n  }\n\n  filter = (flag) => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n\n    if (flag === 1) {\n      return [...todos];\n    }\n\n    if (flag === 2) {\n      return [...todos.filter(item => !item.completed)];\n    }\n\n    if (flag === 3) {\n      return [...todos.filter(item => item.completed)];\n    }\n\n    return undefined;\n  }\n\n  filtersHandler = (flagFilters) => {\n    this.setState({\n      filtersFlag: flagFilters,\n      visibleTodos: this.filter(flagFilters),\n    });\n  }\n\n  checkBoxHandler = (id) => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    const curentTodo = todos.find(todo => todo.id === id);\n\n    curentTodo.completed = !curentTodo.completed;\n    localStorage.setItem('todos', JSON.stringify(todos));\n    this.setState(prevState => ({\n      visibleTodos: this.filter(prevState.filtersFlag),\n    }));\n  }\n\n  onClearButton = () => {\n    let todos = JSON.parse(localStorage.getItem('todos'));\n\n    todos = todos.filter(todo => !todo.completed);\n    localStorage.setItem('todos', JSON.stringify(todos));\n    this.setState(prevState => ({\n      count: todos.length,\n      visibleTodos: this.filter(prevState.filtersFlag),\n    }));\n  }\n\n  destroyHandler = (id) => {\n    let todos = JSON.parse(localStorage.getItem('todos'));\n\n    todos = todos.filter(todo => todo.id !== id);\n    localStorage.setItem('todos', JSON.stringify(todos));\n    this.setState(prevState => ({\n      count: todos.length,\n      visibleTodos: this.filter(prevState.filtersFlag),\n    }));\n  }\n\n  editHandler = (id, title) => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n\n    (todos.find(item => item.id === id)).title = title;\n    localStorage.setItem('todos', JSON.stringify(todos));\n    this.setState(prevState => ({\n      visibleTodos: this.filter(prevState.filtersFlag),\n    }));\n  }\n\n  newTodoHandler = (title) => {\n    const todos = JSON.parse(localStorage.getItem('todos'));\n    const newId = +localStorage.getItem('todoLastId') + 1;\n\n    todos.push({\n      id: newId,\n      title,\n      completed: false,\n    });\n    localStorage.setItem('todos', JSON.stringify(todos));\n    localStorage.setItem('todoLastId', `${newId}`);\n    this.setState(prevState => ({\n      count: todos.length,\n      visibleTodos: this.filter(prevState.filtersFlag),\n    }));\n  }\n\n  render() {\n    if (!localStorage.todos) {\n      localStorage.setItem('todos', '[]');\n      localStorage.setItem('todoLastId', '0');\n    }\n\n    return (\n      <section className=\"todoapp\">\n        <NewTodo onNewTodo={this.newTodoHandler} />\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            onEdit={this.editHandler}\n            onDestroy={this.destroyHandler}\n            onCheckBox={this.checkBoxHandler}\n            todos={this.state.visibleTodos}\n          />\n        </section>\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${this.state.count} items left`}\n          </span>\n\n          <Filters todos={this.todos} onFilters={this.filtersHandler} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.onClearButton}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}