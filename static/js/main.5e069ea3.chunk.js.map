{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/Filters/Filters.js","App.js","index.js"],"names":["Todo","state","title","props","tempTitle","isEdit","targetInput","undefined","checkBoxClicked","onCheckBox","id","onDestroyClick","onDestroy","onEdit","setState","onEditInput","event","target","value","onBlurInput","newTitle","trim","onEscape","keyCode","prevState","onKeyInput","key","refHandler","ref","this","focus","completed","className","cx","editing","type","checked","onClick","onDoubleClick","onChange","onBlur","onKeyPress","onKeyDown","Component","TodoList","todos","map","todo","NewTodo","changeHandler","onNewTodo","placeholder","React","Filters","currentItem","linkList","clickHandler","preventDefault","onFilters","link","href","App","filtersFlag","count","rawTodos","visibleTodos","todoLastId","checkBoxHandler","currentTodo","find","filter","reduce","acc","item","onClearButton","length","destroyHandler","editHandler","newTodoHandler","newId","push","flag","filtersHandler","flagFilters","handlerToggleAll","localStorage","JSON","parse","getItem","lastId","setItem","stringify","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e069ea3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\n\nexport class Todo extends Component {\n  state = {\n    title: this.props.title,\n    tempTitle: this.props.title,\n    isEdit: false,\n    targetInput: undefined,\n  }\n\n  componentDidUpdate() {\n    const { isEdit, targetInput } = this.state;\n\n    if (isEdit && targetInput) {\n      targetInput.focus();\n    }\n  }\n\n   checkBoxClicked = () => {\n     const { onCheckBox, id } = this.props;\n\n     onCheckBox(id);\n   }\n\n  onDestroyClick = () => {\n    const { onDestroy, id } = this.props;\n\n    onDestroy(id);\n  }\n\n  onEdit = () => {\n    this.setState({ isEdit: true });\n  }\n\n  onEditInput = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = () => {\n    let newTitle;\n    const { tempTitle, title } = this.state;\n    const { onEdit, id } = this.props;\n\n    if (tempTitle.trim() !== '') {\n      onEdit(id, tempTitle.trim());\n      newTitle = tempTitle;\n    } else {\n      newTitle = title;\n    }\n\n    this.setState({\n      tempTitle: newTitle,\n      isEdit: false,\n    });\n  }\n\n  onEscape = (event) => {\n    if (event.keyCode === 27) {\n      this.setState(prevState => ({\n        tempTitle: prevState.title,\n        isEdit: false,\n      }));\n    }\n  }\n\n  onKeyInput = (event) => {\n    if (event.key === 'Enter') {\n      let newTitle;\n      const { tempTitle, title } = this.state;\n      const { onEdit, id } = this.props;\n\n      if (tempTitle.trim() !== '') {\n        onEdit(id, tempTitle.trim());\n        newTitle = tempTitle;\n      } else {\n        newTitle = title;\n      }\n\n      this.setState({\n        tempTitle: newTitle,\n        isEdit: false,\n      });\n    }\n  }\n\n  refHandler = (ref) => {\n    this.setState({ targetInput: ref });\n  }\n\n  render() {\n    const { title, completed } = this.props;\n\n    return (\n      <li\n        className={cx({\n          completed,\n          editing: this.state.isEdit,\n        })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onClick={this.checkBoxClicked}\n          />\n          <label onDoubleClick={this.onEdit}>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={this.onDestroyClick}\n\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={this.state.tempTitle}\n          onChange={this.onEditInput}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onKeyDown={this.onEscape}\n          ref={this.refHandler}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, onCheckBox, onDestroy, onEdit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          onEdit={onEdit}\n          onDestroy={onDestroy}\n          onCheckBox={onCheckBox}\n          key={todo.id}\n          {...todo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewTodo extends React.Component {\n  state = {\n    tempTitle: '',\n  }\n\n  changeHandler = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = () => {\n    const title = this.state.tempTitle.trim();\n\n    if (title !== '') {\n      this.props.onNewTodo(title);\n    }\n\n    this.setState({\n      tempTitle: '',\n    });\n  }\n\n  onEscape = (event) => {\n    const { keyCode } = event;\n\n    if (keyCode === 27) {\n      this.setState({\n        tempTitle: '',\n      });\n    }\n  }\n\n  onKeyInput = (event) => {\n    const { key, target } = event;\n\n    if (key === 'Enter') {\n      const title = this.state.tempTitle.trim();\n\n      if (title !== '') {\n        this.setState({\n          tempTitle: '',\n        });\n        target.value = '';\n        this.props.onNewTodo(title);\n      } else {\n        this.setState({\n          tempTitle: '',\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.changeHandler}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onKeyDown={this.onEscape}\n          value={this.state.tempTitle}\n        />\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  onNewTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Filters extends Component {\n  state = {\n    currentItem: 1,\n  }\n\n  linkList = [\n    {\n      id: 1, title: 'All',\n    },\n    {\n      id: 2, title: 'Active',\n    },\n    {\n      id: 3, title: 'Completed',\n    },\n  ]\n\n  clickHandler = (event, id) => {\n    event.preventDefault();\n    this.setState({ currentItem: id });\n    this.props.onFilters(id);\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.linkList.map(link => (\n          <li key={link.id}>\n            <a\n              href={`#/${link.title}`}\n              className={this.state.currentItem === link.id ? 'selected' : ''}\n              onClick={event => this.clickHandler(event, link.id)}\n            >\n              {link.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nFilters.propTypes = {\n  onFilters: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { Filters } from './components/Filters/Filters';\n\nclass App extends Component {\n  state = {\n    filtersFlag: 1,\n    count: 0,\n    rawTodos: [],\n    visibleTodos: [],\n    todoLastId: 0,\n  }\n\n  componentDidMount() {\n    const todos = localStorage.todos\n      ? JSON.parse(localStorage.getItem('todos'))\n      : [];\n    const lastId = localStorage.todoLastId\n      ? +localStorage.getItem('todoLastId')\n      : 0;\n\n    this.setState({\n      count: todos.reduce((acc, todo) => (todo.completed ? acc : acc + 1), 0),\n      rawTodos: todos,\n      visibleTodos: todos,\n      todoLastId: lastId,\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.rawTodos));\n    localStorage.setItem('todoLastId', this.state.todoLastId);\n  }\n\n  checkBoxHandler = (id) => {\n    const todos = [...this.state.rawTodos];\n    const currentTodo = todos.find(todo => todo.id === id);\n\n    currentTodo.completed = !currentTodo.completed;\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count: todos.reduce((acc, item) => (item.completed ? acc : acc + 1), 0),\n    }));\n  }\n\n  onClearButton = () => {\n    const todos = this.state.rawTodos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count: todos.length,\n    }));\n  }\n\n  destroyHandler = (id) => {\n    const todos = this.state.rawTodos.filter(todo => todo.id !== id);\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      count: todos.reduce((acc, item) => (item.completed ? acc : acc + 1), 0),\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n    }));\n  }\n\n  editHandler = (id, title) => {\n    const todos = [...this.state.rawTodos];\n\n    (todos.find(item => item.id === id)).title = title;\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n    }));\n  }\n\n  newTodoHandler = (title) => {\n    const todos = [...this.state.rawTodos];\n    const newId = this.state.todoLastId + 1;\n\n    todos.push({\n      id: newId,\n      title,\n      completed: false,\n    });\n\n    this.setState(prevState => ({\n      count: todos.length,\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      todoLastId: newId,\n    }));\n  }\n\n  filter = (flag, todos) => {\n    if (flag === 1) {\n      return [...todos];\n    }\n\n    if (flag === 2) {\n      return [...todos.filter(item => !item.completed)];\n    }\n\n    if (flag === 3) {\n      return [...todos.filter(item => item.completed)];\n    }\n\n    return undefined;\n  }\n\n  filtersHandler = (flagFilters) => {\n    this.setState(prevState => ({\n      filtersFlag: flagFilters,\n      visibleTodos: this.filter(flagFilters, prevState.rawTodos),\n    }));\n  }\n\n  handlerToggleAll = (event) => {\n    let todos;\n    let count;\n\n    if (event.target.checked) {\n      todos = this.state.rawTodos.map((item) => {\n        const newItem = {\n          ...item, completed: true,\n        };\n\n        return newItem;\n      });\n      count = 0;\n    } else {\n      todos = this.state.rawTodos.map((item) => {\n        const newItem = {\n          ...item, completed: false,\n        };\n\n        return newItem;\n      });\n      count = todos.length;\n    }\n\n    this.setState(prevState => ({\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count,\n      rawTodos: [...todos],\n    }));\n  }\n\n  render() {\n    // localStorage.removeItem('todos')\n    // localStorage.removeItem('todoLastId')\n\n    if (!localStorage.todos) {\n      localStorage.setItem('todos', '[]');\n      localStorage.setItem('todoLastId', '0');\n    }\n\n    return (\n\n      <section className=\"todoapp\">\n        <NewTodo onNewTodo={this.newTodoHandler} />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.handlerToggleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            onEdit={this.editHandler}\n            onDestroy={this.destroyHandler}\n            onCheckBox={this.checkBoxHandler}\n            todos={this.state.visibleTodos}\n          />\n        </section>\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${this.state.count} items left`}\n          </span>\n\n          <Filters todos={this.todos} onFilters={this.filtersHandler} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.onClearButton}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}