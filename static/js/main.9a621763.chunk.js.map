{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/Filters/Filters.js","App.js","index.js"],"names":["Todo","state","tempTitle","props","todo","title","isEdit","textInput","React","createRef","onEdit","setState","current","focus","onEditInput","event","target","value","onBlurInput","newTitle","id","trim","onEscape","keyCode","onKeyInput","key","this","completed","onCheckBox","onDestroy","className","cx","editing","type","checked","onClick","onDoubleClick","onChange","onBlur","onKeyPress","onKeyDown","ref","Component","TodoList","todos","map","NewTodo","changeHandler","onNewTodo","placeholder","Filters","currentItem","linkList","clickHandler","preventDefault","onFilters","link","href","App","filtersFlag","count","rawTodos","visibleTodos","todoLastId","checkBoxHandler","currentTodo","find","prevState","filter","reduce","acc","item","onClearButton","length","destroyHandler","editHandler","newTodoHandler","newId","push","flag","filtersHandler","flagFilters","handlerToggleAll","localStorage","JSON","parse","getItem","lastId","setItem","stringify","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a621763.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as cx from 'classnames';\n\nexport class Todo extends Component {\n  state = {\n    tempTitle: this.props.todo.title,\n    isEdit: false,\n  }\n\n  textInput = React.createRef();\n\n  componentDidUpdate() {\n    if (this.state.isEdit) {\n      this.textInput.current.focus();\n    }\n  }\n\n  onEdit = () => {\n    this.setState({ isEdit: true });\n    this.textInput.current.focus();\n  }\n\n  onEditInput = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = () => {\n    let newTitle;\n    const { tempTitle } = this.state;\n    const { onEdit, todo: { id, title } } = this.props;\n\n    if (tempTitle.trim() !== '') {\n      onEdit(id, tempTitle.trim());\n      newTitle = tempTitle;\n    } else {\n      newTitle = title;\n    }\n\n    this.setState({\n      tempTitle: newTitle,\n      isEdit: false,\n    });\n  }\n\n  onEscape = (event) => {\n    if (event.keyCode === 27) {\n      this.setState({\n        tempTitle: this.props.todo.title,\n        isEdit: false,\n      });\n    }\n  }\n\n  onKeyInput = (event) => {\n    if (event.key === 'Enter') {\n      let newTitle;\n      const { tempTitle } = this.state;\n      const { onEdit, todo: { id, title } } = this.props;\n\n      if (tempTitle.trim() !== '') {\n        onEdit(id, tempTitle.trim());\n        newTitle = tempTitle;\n      } else {\n        newTitle = title;\n      }\n\n      this.setState({\n        tempTitle: newTitle,\n        isEdit: false,\n      });\n    }\n  }\n\n  render() {\n    const {\n      todo: {\n        title, completed, id,\n      },\n      onCheckBox,\n      onDestroy,\n    } = this.props;\n\n    return (\n      <li\n        className={cx({\n          completed,\n          editing: this.state.isEdit,\n        })}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onClick={() => onCheckBox(id)}\n          />\n          <label onDoubleClick={this.onEdit}>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => onDestroy(id)}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={this.state.tempTitle}\n          onChange={this.onEditInput}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onKeyDown={this.onEscape}\n          ref={this.textInput}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool.isRequired,\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, onCheckBox, onDestroy, onEdit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          onEdit={onEdit}\n          onDestroy={onDestroy}\n          onCheckBox={onCheckBox}\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewTodo extends React.Component {\n  state = {\n    tempTitle: '',\n  }\n\n  changeHandler = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = () => {\n    const title = this.state.tempTitle.trim();\n\n    if (title !== '') {\n      this.props.onNewTodo(title);\n    }\n\n    this.setState({\n      tempTitle: '',\n    });\n  }\n\n  onEscape = (event) => {\n    const { keyCode } = event;\n\n    if (keyCode === 27) {\n      this.setState({\n        tempTitle: '',\n      });\n    }\n  }\n\n  onKeyInput = (event) => {\n    const { key, target } = event;\n\n    if (key === 'Enter') {\n      const title = this.state.tempTitle.trim();\n\n      if (title !== '') {\n        this.setState({\n          tempTitle: '',\n        });\n        target.value = '';\n        this.props.onNewTodo(title);\n      } else {\n        this.setState({\n          tempTitle: '',\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.changeHandler}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onKeyDown={this.onEscape}\n          value={this.state.tempTitle}\n        />\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  onNewTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Filters extends Component {\n  state = {\n    currentItem: 1,\n  }\n\n  linkList = [\n    {\n      id: 1, title: 'All',\n    },\n    {\n      id: 2, title: 'Active',\n    },\n    {\n      id: 3, title: 'Completed',\n    },\n  ]\n\n  clickHandler = (event, id) => {\n    event.preventDefault();\n    this.setState({ currentItem: id });\n    this.props.onFilters(id);\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.linkList.map(link => (\n          <li key={link.id}>\n            <a\n              href={`#/${link.title}`}\n              className={this.state.currentItem === link.id ? 'selected' : ''}\n              onClick={event => this.clickHandler(event, link.id)}\n            >\n              {link.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nFilters.propTypes = {\n  onFilters: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { Filters } from './components/Filters/Filters';\n\nclass App extends Component {\n  state = {\n    filtersFlag: 1,\n    count: 0,\n    rawTodos: [],\n    visibleTodos: [],\n    todoLastId: 0,\n  }\n\n  componentDidMount() {\n    const todos = localStorage.todos\n      ? JSON.parse(localStorage.getItem('todos'))\n      : [];\n    const lastId = localStorage.todoLastId\n      ? +localStorage.getItem('todoLastId')\n      : 0;\n\n    this.setState({\n      count: todos.reduce((acc, todo) => (todo.completed ? acc : acc + 1), 0),\n      rawTodos: todos,\n      visibleTodos: todos,\n      todoLastId: lastId,\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.rawTodos));\n    localStorage.setItem('todoLastId', this.state.todoLastId);\n  }\n\n  checkBoxHandler = (id) => {\n    const todos = [...this.state.rawTodos];\n    const currentTodo = todos.find(todo => todo.id === id);\n\n    currentTodo.completed = !currentTodo.completed;\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count: todos.reduce((acc, item) => (item.completed ? acc : acc + 1), 0),\n    }));\n  }\n\n  onClearButton = () => {\n    const todos = this.state.rawTodos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count: todos.length,\n    }));\n  }\n\n  destroyHandler = (id) => {\n    const todos = this.state.rawTodos.filter(todo => todo.id !== id);\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      count: todos.reduce((acc, item) => (item.completed ? acc : acc + 1), 0),\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n    }));\n  }\n\n  editHandler = (id, title) => {\n    const todos = [...this.state.rawTodos];\n\n    (todos.find(item => item.id === id)).title = title;\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n    }));\n  }\n\n  newTodoHandler = (title) => {\n    const todos = [...this.state.rawTodos];\n    const newId = this.state.todoLastId + 1;\n\n    todos.push({\n      id: newId,\n      title,\n      completed: false,\n    });\n\n    this.setState(prevState => ({\n      count: todos.length,\n      rawTodos: todos,\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      todoLastId: newId,\n    }));\n  }\n\n  filter = (flag, todos) => {\n    if (flag === 1) {\n      return [...todos];\n    }\n\n    if (flag === 2) {\n      return todos.filter(item => !item.completed);\n    }\n\n    if (flag === 3) {\n      return todos.filter(item => item.completed);\n    }\n\n    return undefined;\n  }\n\n  filtersHandler = (flagFilters) => {\n    this.setState(prevState => ({\n      filtersFlag: flagFilters,\n      visibleTodos: this.filter(flagFilters, prevState.rawTodos),\n    }));\n  }\n\n  handlerToggleAll = (event) => {\n    let todos;\n    let count;\n    const { rawTodos } = this.state;\n\n    if (event.target.checked) {\n      todos = rawTodos.map((item) => {\n        const newItem = {\n          ...item,\n          completed: true,\n        };\n\n        return newItem;\n      });\n      count = 0;\n    } else {\n      todos = rawTodos.map((item) => {\n        const newItem = {\n          ...item,\n          completed: false,\n        };\n\n        return newItem;\n      });\n      count = todos.length;\n    }\n\n    this.setState(prevState => ({\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count,\n      rawTodos: [...todos],\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <NewTodo onNewTodo={this.newTodoHandler} />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.handlerToggleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            onEdit={this.editHandler}\n            onDestroy={this.destroyHandler}\n            onCheckBox={this.checkBoxHandler}\n            todos={this.state.visibleTodos}\n          />\n        </section>\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${this.state.count} items left`}\n          </span>\n\n          <Filters todos={this.todos} onFilters={this.filtersHandler} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.onClearButton}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}