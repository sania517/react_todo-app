{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","components/NewTodo/NewTodo.js","components/Filters/Filters.js","App.js","index.js"],"names":["Todo","state","title","props","tempTitle","checkBoxClicked","onCheckBox","id","onDestroyClick","onDestroy","onEdit","event","target","tagName","currentTarget","classList","add","querySelector","focus","onEditInput","setState","value","onBlurInput","trim","closest","remove","prevState","onEscape","keyCode","onKeyInput","key","this","completed","onDoubleClick","className","type","checked","onClick","onChange","onBlur","onKeyPress","onFocus","onFocusInput","onKeyDown","Component","TodoList","todos","map","todo","NewTodo","changeHandler","onNewTodo","placeholder","React","Filters","currentItem","linkList","clickHandler","preventDefault","onFilters","link","href","App","filtersFlag","count","rawTodos","visibleTodos","todoLastId","checkBoxHandler","currentTodo","find","filter","reduce","acc","item","onClearButton","length","destroyHandler","editHandler","newTodoHandler","newId","push","flag","filtersHandler","flagFilters","handlerToggleAll","localStorage","JSON","parse","getItem","lastId","setItem","stringify","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4946a04.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Todo extends Component {\n  state = {\n    title: this.props.title,\n    tempTitle: this.props.title,\n  }\n\n   checkBoxClicked = () => {\n     this.props.onCheckBox(this.props.id);\n   }\n\n  onDestroyClick = () => {\n    this.props.onDestroy(this.props.id);\n  }\n\n  onEdit = (event) => {\n    if (event.target.tagName === 'LABEL') {\n      event.currentTarget.classList.add('editing');\n      event.currentTarget.querySelector('.edit').focus();\n    }\n  }\n\n  onEditInput = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = (event) => {\n    if (this.state.tempTitle.trim() !== '') {\n      this.props.onEdit(this.props.id, this.state.tempTitle.trim());\n      event.target.closest('li').classList.remove('editing');\n    } else {\n      this.setState(prevState => ({\n        tempTitle: prevState.title,\n      }));\n      event.target.closest('li').classList.remove('editing');\n    }\n  }\n\n  onEscape = (event) => {\n    if (event.keyCode === 27) {\n      this.setState(prevState => ({\n        tempTitle: prevState.title,\n      }));\n      event.target.closest('li').classList.remove('editing');\n    }\n  }\n\n  onKeyInput = (event) => {\n    if (event.key === 'Enter') {\n      if (this.state.tempTitle.trim() !== '') {\n        this.props.onEdit(this.props.id, this.state.tempTitle.trim());\n        event.target.closest('li').classList.remove('editing');\n      } else {\n        this.setState(prevState => ({\n          tempTitle: prevState.title,\n        }));\n        event.target.closest('li').classList.remove('editing');\n      }\n    }\n  }\n\n  render() {\n    const { title, completed } = this.props;\n\n    return (\n      <li\n        onDoubleClick={this.onEdit}\n        className={completed ? 'completed' : ''}\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={completed}\n            onClick={this.checkBoxClicked}\n          />\n          <label>{title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={this.onDestroyClick}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={this.state.tempTitle}\n          onChange={this.onEditInput}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onFocus={this.onFocusInput}\n          onKeyDown={this.onEscape}\n        />\n      </li>\n    );\n  }\n}\n\nTodo.propTypes = {\n  completed: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (props) => {\n  const { todos, onCheckBox, onDestroy, onEdit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          onEdit={onEdit}\n          onDestroy={onDestroy}\n          onCheckBox={onCheckBox}\n          key={todo.id}\n          {...todo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  onCheckBox: PropTypes.func.isRequired,\n  onDestroy: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewTodo extends React.Component {\n  state = {\n    tempTitle: '',\n  }\n\n  changeHandler = (event) => {\n    this.setState({\n      tempTitle: event.target.value,\n    });\n  }\n\n  onBlurInput = () => {\n    const title = this.state.tempTitle.trim();\n\n    if (title !== '') {\n      this.props.onNewTodo(title);\n    }\n\n    this.setState({\n      tempTitle: '',\n    });\n  }\n\n  onEscape = (event) => {\n    const { keyCode } = event;\n\n    if (keyCode === 27) {\n      this.setState({\n        tempTitle: '',\n      });\n    }\n  }\n\n  onKeyInput = (event) => {\n    const { key, target } = event;\n\n    if (key === 'Enter') {\n      const title = this.state.tempTitle.trim();\n\n      if (title !== '') {\n        this.setState({\n          tempTitle: '',\n        });\n        target.value = '';\n        this.props.onNewTodo(title);\n      } else {\n        this.setState({\n          tempTitle: '',\n        });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.changeHandler}\n          onBlur={this.onBlurInput}\n          onKeyPress={this.onKeyInput}\n          onKeyDown={this.onEscape}\n          value={this.state.tempTitle}\n        />\n      </header>\n    );\n  }\n}\n\nNewTodo.propTypes = {\n  onNewTodo: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Filters extends Component {\n  state = {\n    currentItem: 1,\n  }\n\n  linkList = [\n    {\n      id: 1, title: 'All',\n    },\n    {\n      id: 2, title: 'Active',\n    },\n    {\n      id: 3, title: 'Completed',\n    },\n  ]\n\n  clickHandler = (event, id) => {\n    event.preventDefault();\n    this.setState({ currentItem: id });\n    this.props.onFilters(id);\n  }\n\n  render() {\n    return (\n      <ul className=\"filters\">\n        {this.linkList.map(link => (\n          <li key={link.id}>\n            <a\n              href={`#/${link.title}`}\n              className={this.state.currentItem === link.id ? 'selected' : ''}\n              onClick={event => this.clickHandler(event, link.id)}\n            >\n              {link.title}\n            </a>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nFilters.propTypes = {\n  onFilters: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { Filters } from './components/Filters/Filters';\n\nclass App extends Component {\n  state = {\n    filtersFlag: 1,\n    count: 0,\n    rawTodos: [],\n    visibleTodos: [],\n    todoLastId: 0,\n  }\n\n  componentDidMount() {\n    const todos = localStorage.todos\n      ? JSON.parse(localStorage.getItem('todos'))\n      : [];\n    const lastId = localStorage.todoLastId\n      ? +localStorage.getItem('todoLastId')\n      : 0;\n\n    this.setState({\n      count: todos.reduce((acc, todo) => (todo.completed ? acc : acc + 1), 0),\n      rawTodos: todos,\n      visibleTodos: todos,\n      todoLastId: lastId,\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('todos', JSON.stringify(this.state.rawTodos));\n    localStorage.setItem('todoLastId', this.state.todoLastId);\n  }\n\n  checkBoxHandler = (id) => {\n    const todos = [...this.state.rawTodos];\n    const currentTodo = todos.find(todo => todo.id === id);\n\n    currentTodo.completed = !currentTodo.completed;\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count: todos.reduce((acc, item) => (item.completed ? acc : acc + 1), 0),\n    }));\n  }\n\n  onClearButton = () => {\n    const todos = this.state.rawTodos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count: todos.length,\n    }));\n  }\n\n  destroyHandler = (id) => {\n    const todos = this.state.rawTodos.filter(todo => todo.id !== id);\n\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      count: todos.reduce((acc, item) => (item.completed ? acc : acc + 1), 0),\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n    }));\n  }\n\n  editHandler = (id, title) => {\n    const todos = [...this.state.rawTodos];\n\n    (todos.find(item => item.id === id)).title = title;\n    this.setState(prevState => ({\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n    }));\n  }\n\n  newTodoHandler = (title) => {\n    const todos = [...this.state.rawTodos];\n    const newId = this.state.todoLastId + 1;\n\n    todos.push({\n      id: newId,\n      title,\n      completed: false,\n    });\n\n    this.setState(prevState => ({\n      count: todos.length,\n      rawTodos: [...todos],\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      todoLastId: newId,\n    }));\n  }\n\n  filter = (flag, todos) => {\n    if (flag === 1) {\n      return [...todos];\n    }\n\n    if (flag === 2) {\n      return [...todos.filter(item => !item.completed)];\n    }\n\n    if (flag === 3) {\n      return [...todos.filter(item => item.completed)];\n    }\n\n    return undefined;\n  }\n\n  filtersHandler = (flagFilters) => {\n    this.setState(prevState => ({\n      filtersFlag: flagFilters,\n      visibleTodos: this.filter(flagFilters, prevState.rawTodos),\n    }));\n  }\n\n  handlerToggleAll = (event) => {\n    let todos;\n    let count;\n\n    if (event.target.checked) {\n      todos = this.state.rawTodos.map((item) => {\n        const newItem = {\n          ...item, completed: true,\n        };\n\n        return newItem;\n      });\n      count = 0;\n    } else {\n      todos = this.state.rawTodos.map((item) => {\n        const newItem = {\n          ...item, completed: false,\n        };\n\n        return newItem;\n      });\n      count = todos.length;\n    }\n\n    this.setState(prevState => ({\n      visibleTodos: this.filter(prevState.filtersFlag, todos),\n      count,\n      rawTodos: [...todos],\n    }));\n  }\n\n  render() {\n    // localStorage.removeItem('todos')\n    // localStorage.removeItem('todoLastId')\n\n    if (!localStorage.todos) {\n      localStorage.setItem('todos', '[]');\n      localStorage.setItem('todoLastId', '0');\n    }\n\n    return (\n\n      <section className=\"todoapp\">\n        <NewTodo onNewTodo={this.newTodoHandler} />\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.handlerToggleAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            onEdit={this.editHandler}\n            onDestroy={this.destroyHandler}\n            onCheckBox={this.checkBoxHandler}\n            todos={this.state.visibleTodos}\n          />\n        </section>\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {`${this.state.count} items left`}\n          </span>\n\n          <Filters todos={this.todos} onFilters={this.filtersHandler} />\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            onClick={this.onClearButton}\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}